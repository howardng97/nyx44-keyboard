[keyboard]
name = "Nyx 44"
product_name = "Nyx 44"
vendor_id = 0x4c4b
product_id = 0x4643
manufacturer = "HowardN97"
serial_number = "vial:f64c2b3c:000001"
#chip = "nrf52840"
board = "nice!nano_v2"

[layout]
rows = 4
cols = 20
layers = 3
keymap = [
    [
        ["Tab", "Q", "W","E","R", "T", "_","_","_","_","_","_","_","_","Y","U","I","O","P","Backspace"],
        ["Escape", "A", "S","D","F", "G", "_","_","_","_","_","_","_","_","H","J","K","L","Semicolon","Quote"],
        ["LShift", "Z", "X","C","V", "B", "KbVolumeUp","_","_","_","_","_","_","KbVolumeDown","N","M","Comma","Dot","Slash","RShift"],
        ["_", "_", "_","_","_", "_", "_","LGui","LCrtl","Space","Space","MO(1)","RAlt","_","_","_","_","_","_","_"]
    ],
    [
        ["Grave", "Kc1", "Kc2","Kc3","Kc4", "Kc5", "_","_","_","_","_","_","_","_","Kc6","Kc7","Kc8","Kc9","Kc0","Backslash"],
          ["Minus", "LM(Minus,LShift)", "MouseLeft","MouseUp","MouseDown", "MouseRight", "_","_","_","_","_","_","_","_","Left","Down","UP","Right","LM(Equal,RShift)","Equal"],
      ["LShift", "LeftBracket", "RightBracket","LM(LeftBracket,LShift)","LM(RightBracket,LShift)", "MouseBtn2", "Calculator","_","_","_","_","_","_","PrintScreen","MouseBtn1","MouseWheelDown","MouseWheelUp","_","_","_"],
        ["_", "_", "_","_","_", "_", "_","MO(2)","LCrtl","Enter","_","_","_","_","_","_","_","_","_","_"]
    ],
    [
        ["_", "F1", "F2","F3","F4", "F5", "_","_","_","_","_","_","_","_","F6","F7","F8","F9","F10","_"],
        ["_", "F11", "_","_","_", "_", "_","_","_","_","_","_","_","_","_","_","_","_","F12","_"],
        ["_", "User0", "User1","User2","User3", "User4", "User10","_","_","_","_","_","_","User11","User5","User6","User7","User8","User9","_"],
        ["_", "_", "_","_","_", "_", "_","_","_","_","_","_","_","_","_","_","_","_","_","_"]
    ],
]

[storage]

[ble]
enabled = true
# nRF52840's saadc pin for reading battery level, you can use a pin number or "vddh"
battery_adc_pin = "vddh"
# The voltage divider setting for saadc. 
# For example, nice!nano have 806 + 2M resistors, the saadc measures voltage on 2M resistor, so the two values should be set to 2000 and 2806
adc_divider_measured = 2000
adc_divider_total = 2806
# Pin that reads battery's charging state, `low-active` means the battery is charging when `charge_state.pin` is low
charge_state = { pin = "PIN_1", low_active = true }
# Output LED pin that blinks when the battery is low
charge_led= { pin = "PIN_2", low_active = true }

[behavior]
#tap_hold = { enable_hrm = true, prior_idle_time = "120ms", hold_timeout = "250ms", post_wait_time = "50ms"}

[split]
connection = "ble"

[split.central]
rows = 4
cols = 10
row_offset = 0
col_offset = 0
ble_addr = [0x18, 0xe2, 0x21, 0x80, 0xc0, 0xc7]

[split.central.matrix]
matrix_type = "normal"
# WARNING: Currently row2col/col2row is set in RMK's feature gate, row2col config here is valid ONLY when you're using cloud compilation
# row2col = true
input_pins = ["P0_22","P1_00","P0_11","P0_24"]
output_pins = ["P1_15","P1_13","P1_11","P1_10","P0_09","P1_06","P1_08","P0_31","P0_29","P0_02"]

[[split.peripheral]]
rows = 4
cols = 10
row_offset = 0
col_offset = 10
ble_addr = [0x7e, 0xfe, 0x73, 0x9e, 0x66, 0xe3]
[split.peripheral.matrix]
matrix_type = "normal"
input_pins = ["P0_11","P1_00","P0_24","P0_22"]
output_pins = ["P1_15", "P1_13","P1_11","P1_10","P0_09","P1_06","P1_08","P0_31","P0_29","P0_02"]

